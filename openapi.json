{"openapi":"3.0.0","info":{"title":"LinkInPurry API","version":"1.0.0","description":"\n          LinkInPurry API\n          \n          Overview\n          Professional networking platform API\n          \n          Authentication\n          This API uses cookie-based authentication. Requests to protected endpoints must include the 'token' cookie.\n          \n          Rate Limiting\n          Requests are limited to 100 per 900 seconds per IP address.\n        ","contact":{"name":"Development Team","url":"https://github.com/Labpro-21/if-3310-2024-2-k01-12"},"license":{"name":"MIT","url":"https://opensource.org/licenses/MIT"}},"servers":[{"url":"http://localhost:3000","description":"development server"}],"components":{"schemas":{"AuthTokenDAO":{"type":"object","properties":{"token":{"type":"string","description":"JWT authentication token","example":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."}},"required":["token"]},"ErrorDetail":{"type":"object","properties":{"field":{"type":"string","description":"Error message for invalid field value","example":"username"},"message":{"type":"string","description":"Error message for invalid field value","example":"Invalid username"},"details":{"type":"string","description":"Additional details for the error","example":"Any additional details"}},"required":["message"]},"ApiResponse":{"type":"object","properties":{"success":{"type":"boolean","description":"Success status of the response","example":true},"message":{"type":"string","description":"Error message for invalid field value","example":"Invalid username"},"body":{"nullable":true},"error":{"type":"array","items":{"$ref":"#/components/schemas/ErrorDetail"},"description":"Error response for invalid input","example":[{"field":"username","message":"Invalid username","details":"Any additional details"},{"field":"email","message":"Invalid email","details":"Any additional details"}]}},"required":["success","message"]},"LoginResponse":{"allOf":[{"$ref":"#/components/schemas/ApiResponse"},{"type":"object","properties":{"body":{"$ref":"#/components/schemas/AuthTokenDAO"}},"required":["body"]}],"description":"Successful login response"},"LoginRequestDTO":{"type":"object","properties":{"identifier":{"type":"string","minLength":3,"maxLength":255,"description":"Unique identifier for the account","example":"john_doe"},"password":{"type":"string","minLength":8,"maxLength":255,"pattern":"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$","description":"User password","example":"StrongP@ss123"}},"required":["identifier","password"]},"RegisterResponse":{"allOf":[{"$ref":"#/components/schemas/ApiResponse"},{"type":"object","properties":{"body":{"$ref":"#/components/schemas/AuthTokenDAO"}},"required":["body"]}],"description":"Successful registration response"},"RegisterRequestDTO":{"type":"object","properties":{"username":{"type":"string","minLength":3,"maxLength":20,"pattern":"^[a-zA-Z0-9_-]+$","description":"Unique username for the account","example":"john_doe"},"email":{"type":"string","minLength":1,"maxLength":255,"format":"email","description":"Email address of the user","example":"johndoe@gmail.com"},"password":{"type":"string","minLength":8,"maxLength":255,"pattern":"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$","description":"User password","example":"StrongP@ss123"},"name":{"type":"string","minLength":3,"maxLength":255,"description":"Full name of the user","example":"John Doe"}},"required":["username","email","password","name"]},"LogoutResponse":{"type":"object","properties":{"success":{"type":"boolean","description":"Success status of the response","example":true},"message":{"type":"string","description":"Error message for invalid field value","example":"Invalid username"},"body":{"nullable":true},"error":{"type":"array","items":{"$ref":"#/components/schemas/ErrorDetail"},"description":"Error response for invalid input","example":[{"field":"username","message":"Invalid username","details":"Any additional details"},{"field":"email","message":"Invalid email","details":"Any additional details"}]}},"required":["success","message"],"description":"Logout response"},"AuthError":{"allOf":[{"$ref":"#/components/schemas/ApiResponse"},{"type":"object","properties":{"success":{"type":"boolean","enum":[false]},"error":{"type":"array","items":{"type":"object","properties":{"message":{"type":"string"},"field":{"type":"string"}},"required":["message"]}}},"required":["error"]}]},"AuthStatusDAO":{"type":"object","properties":{"isAuthenticated":{"type":"boolean"}},"required":["isAuthenticated"]},"AuthCheckResponse":{"allOf":[{"$ref":"#/components/schemas/ApiResponse"},{"type":"object","properties":{"body":{"$ref":"#/components/schemas/AuthStatusDAO"}},"required":["body"]}],"description":"Authentication check response"},"BaseUserInfoDAO":{"type":"object","properties":{"id":{"type":"number","description":"Unique identifier for the user","example":1},"name":{"type":"string","nullable":true,"description":"Full name of the user","example":"John Doe"},"username":{"type":"string","description":"Unique username for the account","example":"john_doe"},"profile_photo":{"type":"string","nullable":true,"description":"URL to the user's profile photo","example":"https://example.com/profile.jpg"}},"required":["id","name","profile_photo"]},"BaseFeedPostSchemaDAO":{"type":"object","properties":{"id":{"type":"number","description":"Unique identifier for the feed post","example":1},"content":{"type":"string","description":"Content of the feed post","example":"Hello World"},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the record was created","example":"2021-08-01T12:00:00Z"},"updated_at":{"type":"string","format":"date-time","description":"Timestamp when the record was last updated","example":"2021-08-01T12:00:00Z"},"user_id":{"type":"number","description":"Unique identifier for the user","example":1}},"required":["id","content","created_at","updated_at","user_id"]},"FeedPostSchemaDAO":{"allOf":[{"$ref":"#/components/schemas/BaseFeedPostSchemaDAO"},{"type":"object","properties":{"user":{"$ref":"#/components/schemas/BaseUserInfoDAO"}},"required":["user"]}]},"PaginatedResponse":{"type":"object","properties":{"meta":{"type":"object","properties":{"next_cursor":{"type":"number","description":"Cursor value for pagination","example":1},"current_cursor":{"type":"number","description":"Cursor value for pagination","example":1},"total_count":{"type":"number","description":"Total number of records","example":100}}},"data":{"type":"array","items":{"$ref":"#/components/schemas/FeedPostSchemaDAO"}},"cursor":{"type":"number","description":"Cursor value for pagination","example":1}},"required":["meta","data"]},"FeedResponse":{"allOf":[{"$ref":"#/components/schemas/ApiResponse"},{"type":"object","properties":{"body":{"$ref":"#/components/schemas/PaginatedResponse"}},"required":["body"]}]},"FeedPostCreateRequestDTO":{"type":"object","properties":{"content":{"type":"string","minLength":1,"maxLength":280,"description":"Content of the feed post","example":"Hello World"}},"required":["content"]},"FeedPostUpdateRequestDTO":{"type":"object","properties":{"content":{"type":"string","minLength":1,"maxLength":280,"description":"Content of the feed post","example":"Hello World"}},"required":["content"]},"FeedDetailResponse":{"allOf":[{"$ref":"#/components/schemas/ApiResponse"},{"type":"object","properties":{"body":{"$ref":"#/components/schemas/FeedPostSchemaDAO"}},"required":["body"]}]},"FeedErrorResponse":{"allOf":[{"$ref":"#/components/schemas/ApiResponse"},{"type":"object","properties":{"success":{"type":"boolean","enum":[false]},"error":{"type":"array","items":{"type":"object","properties":{"message":{"type":"string"},"field":{"type":"string"}},"required":["message"]}}},"required":["error"]}]},"ChatMessageDAO":{"type":"object","properties":{"id":{"type":"number"},"from_id":{"type":"number"},"to_id":{"type":"number"},"content":{"type":"string"},"timestamp":{"type":"string","format":"date-time"}},"required":["id","from_id","to_id","content","timestamp"]},"ChatHistoryResponseDAO":{"type":"object","properties":{"messages":{"type":"array","items":{"$ref":"#/components/schemas/ChatMessageDAO"}},"next_cursor":{"type":"number"}},"required":["messages"]},"ChatHistoryResponse":{"allOf":[{"$ref":"#/components/schemas/ApiResponse"},{"type":"object","properties":{"body":{"$ref":"#/components/schemas/ChatHistoryResponseDAO"}},"required":["body"]}]},"LastChatUserSchemaDAO":{"type":"object","properties":{"id":{"type":"number"},"name":{"type":"string"},"profile_photo":{"type":"string"},"last_message":{"type":"string","nullable":true},"last_timestamp":{"type":"string","nullable":true,"format":"date-time"},"last_message_id":{"type":"number","nullable":true}},"required":["id","name","profile_photo","last_message","last_timestamp","last_message_id"]},"LastChatUsersSchemaDAO":{"type":"array","items":{"$ref":"#/components/schemas/LastChatUserSchemaDAO"}},"ChatMessageSchemaResponse":{"allOf":[{"$ref":"#/components/schemas/ApiResponse"},{"type":"object","properties":{"body":{"type":"object","properties":{"users":{"$ref":"#/components/schemas/LastChatUsersSchemaDAO"}},"required":["users"]}},"required":["body"]}]},"ProfileAccessLevelEnum":{"type":"string","enum":["public","authenticated","connected","pending-from","owner","pending-to"],"description":"Access level of the user profile","example":"public"},"ProfileResponse":{"allOf":[{"$ref":"#/components/schemas/ApiResponse"},{"type":"object","properties":{"body":{"type":"object","properties":{"id":{"type":"number","description":"Unique identifier for the user","example":1},"name":{"type":"string","nullable":true,"description":"Full name of the user","example":"John Doe"},"username":{"type":"string","description":"Unique username for the account","example":"john_doe"},"profile_photo":{"type":"string","nullable":true,"description":"URL to the user's profile photo","example":"https://example.com/profile.jpg"},"access_level":{"$ref":"#/components/schemas/ProfileAccessLevelEnum"},"connection_count":{"type":"number","description":"Number of connections for the user","example":10},"work_history":{"type":"string","nullable":true,"description":"User's work history","example":"Software Engineer at example Inc."},"skills":{"type":"string","nullable":true,"description":"User's skills","example":"JavaScript, React, Node.js"},"relevant_posts":{"type":"array","items":{"$ref":"#/components/schemas/BaseFeedPostSchemaDAO"},"description":"Recent posts by the user","example":[{"id":1,"content":"Hello World","created_at":"2021-08-01T12:00:00Z","updated_at":"2021-08-01T12:00:00Z","user_id":1}]},"email":{"type":"string","format":"email","description":"Email address of the user","example":"johndoe@gmail.com"},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the record was created","example":"2021-08-01T12:00:00Z"},"updated_at":{"type":"string","format":"date-time","description":"Timestamp when the record was last updated","example":"2021-08-01T12:00:00Z"}},"required":["id","name","profile_photo","access_level","connection_count"]}},"required":["body"]}]},"UserInfoDAO":{"allOf":[{"$ref":"#/components/schemas/BaseUserInfoDAO"},{"type":"object","properties":{"access_level":{"$ref":"#/components/schemas/ProfileAccessLevelEnum"},"connection_count":{"type":"number","description":"Number of connections for the user","example":10},"work_history":{"type":"string","nullable":true,"description":"User's work history","example":"Software Engineer at example Inc."},"skills":{"type":"string","nullable":true,"description":"User's skills","example":"JavaScript, React, Node.js"}},"required":["access_level","connection_count"]}]},"UsersResponseDAO":{"type":"object","properties":{"users":{"type":"array","items":{"$ref":"#/components/schemas/UserInfoDAO"}}},"required":["users"]},"UsersResponse":{"allOf":[{"$ref":"#/components/schemas/ApiResponse"},{"type":"object","properties":{"body":{"$ref":"#/components/schemas/UsersResponseDAO"}},"required":["body"]}]},"ProfileUpdateDTO":{"type":"object","properties":{"name":{"type":"string","minLength":3,"maxLength":255,"description":"Full name of the user","example":"John Doe"},"email":{"type":"string","format":"email","description":"Email address of the user","example":"johndoe@gmail.com"},"username":{"type":"string","minLength":3,"maxLength":20,"pattern":"^[a-zA-Z0-9_-]+$","description":"Unique username for the account","example":"john_doe"},"password":{"type":"string","minLength":8,"maxLength":255,"pattern":"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$","description":"User password","example":"StrongP@ss123"},"work_history":{"type":"string","description":"User's work history","example":"Software Engineer at example Inc."},"profile_photo":{"nullable":true,"description":"User's profile photo","example":"binary"},"skills":{"type":"string","description":"User's skills","example":"JavaScript, React, Node.js"}}},"ConnectionRecommendationDAO":{"type":"object","properties":{"user":{"type":"object","properties":{"id":{"type":"number","description":"Unique identifier for the user","example":1},"access_level":{"$ref":"#/components/schemas/ProfileAccessLevelEnum"},"name":{"type":"string","nullable":true,"description":"Full name of the user","example":"John Doe"},"profile_photo":{"type":"string","nullable":true,"description":"URL to the user's profile photo","example":"https://example.com/profile.jpg"}},"required":["id","access_level","name","profile_photo"]},"degree":{"type":"number","minimum":2,"maximum":3,"description":"Degree of separation from current user (2nd or 3rd degree)","example":2},"mutual_connections":{"type":"array","items":{"type":"object","properties":{"id":{"type":"number","description":"Unique identifier for the user","example":1},"access_level":{"$ref":"#/components/schemas/ProfileAccessLevelEnum"},"name":{"type":"string","nullable":true,"description":"Full name of the user","example":"John Doe"},"profile_photo":{"type":"string","nullable":true,"description":"URL to the user's profile photo","example":"https://example.com/profile.jpg"}},"required":["id","access_level","name","profile_photo"]},"description":"List of mutual connections between the user and recommended contact"},"mutual_count":{"type":"number","description":"Number of mutual connections","example":5}},"required":["user","degree","mutual_connections","mutual_count"]},"ConnectionRecommendationsResponseDAO":{"type":"object","properties":{"recommendations":{"type":"array","items":{"$ref":"#/components/schemas/ConnectionRecommendationDAO"}}},"required":["recommendations"]},"ConnectionRequestDTO":{"type":"object","properties":{"request_to_id":{"type":"number","minimum":0,"exclusiveMinimum":true,"description":"Unique identifier for the user","example":1}},"required":["request_to_id"]},"PendingRequestDAO":{"type":"object","properties":{"request_id":{"type":"number","minimum":0,"exclusiveMinimum":true,"description":"Unique identifier for the request","example":1},"from_user":{"$ref":"#/components/schemas/UserInfoDAO"},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the record was created","example":"2021-08-01T12:00:00Z"}},"required":["request_id","from_user","created_at"]},"PendingRequests":{"type":"array","items":{"$ref":"#/components/schemas/PendingRequestDAO"}},"PendingRequestsResponse":{"type":"object","properties":{"requests":{"$ref":"#/components/schemas/PendingRequests"}},"required":["requests"]},"ActionEnum":{"type":"string","enum":["accept","reject"],"description":"Action to perform on the request","example":"accept"},"ConnectionActionDTO":{"type":"object","properties":{"request_id":{"type":"number","minimum":0,"exclusiveMinimum":true,"description":"Unique identifier for the request","example":1},"action":{"$ref":"#/components/schemas/ActionEnum"}},"required":["request_id","action"]},"ConnectionDAO":{"type":"object","properties":{"connection":{"type":"object","properties":{"from_id":{"type":"number","minimum":0,"exclusiveMinimum":true,"description":"Unique identifier for the user","example":1},"to_id":{"type":"number","minimum":0,"exclusiveMinimum":true,"description":"Unique identifier for the user","example":1},"created_at":{"type":"string","format":"date-time","description":"Timestamp when the record was created","example":"2021-08-01T12:00:00Z"}},"required":["from_id","to_id","created_at"]},"user":{"$ref":"#/components/schemas/UserInfoDAO"}},"required":["connection","user"]},"ConnectionsResponse":{"type":"object","properties":{"connections":{"type":"array","items":{"$ref":"#/components/schemas/ConnectionDAO"}}},"required":["connections"]},"SubscriptionResponse":{"allOf":[{"$ref":"#/components/schemas/ApiResponse"},{"type":"object","properties":{"body":{"type":"object","properties":{"vapidPublicKey":{"type":"string"}},"required":["vapidPublicKey"]}},"required":["body"]}]},"PushSubscription":{"type":"object","properties":{"endpoint":{"type":"string"},"expirationTime":{"type":"number","nullable":true},"keys":{"type":"object","properties":{"p256dh":{"type":"string"},"auth":{"type":"string"}},"required":["p256dh","auth"]}},"required":["endpoint","expirationTime","keys"]},"CheckSubscription":{"type":"object","properties":{"isSubscribed":{"type":"boolean"}},"required":["isSubscribed"]},"CheckSubscriptionResponse":{"allOf":[{"$ref":"#/components/schemas/ApiResponse"},{"type":"object","properties":{"body":{"$ref":"#/components/schemas/CheckSubscription"}},"required":["body"]}]}},"parameters":{}},"paths":{"/api/login":{"post":{"400":{"description":"Invalid malformed input","content":{"application/json":{"schema":{"_def":{"unknownKeys":"strip","catchall":{"_def":{"typeName":"ZodNever"}},"typeName":"ZodObject","openapi":{"_internal":{"extendedFrom":{"refId":"ApiResponse","schema":{"_def":{"unknownKeys":"strip","catchall":{"_def":{"typeName":"ZodNever"}},"typeName":"ZodObject","openapi":{"_internal":{"refId":"ApiResponse"}}},"_cached":null}},"refId":"AuthError"}}},"_cached":null}}}},"401":{"description":"Invalid credentials","content":{"application/json":{"schema":{"_def":{"unknownKeys":"strip","catchall":{"_def":{"typeName":"ZodNever"}},"typeName":"ZodObject","openapi":{"_internal":{"extendedFrom":{"refId":"ApiResponse","schema":{"_def":{"unknownKeys":"strip","catchall":{"_def":{"typeName":"ZodNever"}},"typeName":"ZodObject","openapi":{"_internal":{"refId":"ApiResponse"}}},"_cached":null}},"refId":"AuthError"}}},"_cached":null}}}},"409":{"description":"Username or email already exists","content":{"application/json":{"schema":{"_def":{"unknownKeys":"strip","catchall":{"_def":{"typeName":"ZodNever"}},"typeName":"ZodObject","openapi":{"_internal":{"extendedFrom":{"refId":"ApiResponse","schema":{"_def":{"unknownKeys":"strip","catchall":{"_def":{"typeName":"ZodNever"}},"typeName":"ZodObject","openapi":{"_internal":{"refId":"ApiResponse"}}},"_cached":null}},"refId":"AuthError"}}},"_cached":null}}}},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"_def":{"unknownKeys":"strip","catchall":{"_def":{"typeName":"ZodNever"}},"typeName":"ZodObject","openapi":{"_internal":{"extendedFrom":{"refId":"ApiResponse","schema":{"_def":{"unknownKeys":"strip","catchall":{"_def":{"typeName":"ZodNever"}},"typeName":"ZodObject","openapi":{"_internal":{"refId":"ApiResponse"}}},"_cached":null}},"refId":"AuthError"}}},"_cached":null}}}},"tags":["Authentication"],"summary":"Login to the application","description":"Authenticate user using email/username and password","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LoginRequestDTO"},"examples":{"withEmail":{"summary":"Login with Email","value":{"identifier":"user@gmail.com","password":"StrongP@ss123"}},"withUsername":{"summary":"Login with Username","value":{"identifier":"username","password":"StrongP@ss123"}}}}}},"responses":{"200":{"description":"Operation successful","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LoginResponse"}}}}}}},"/api/register":{"post":{"400":{"description":"Invalid malformed input","content":{"application/json":{"schema":{"_def":{"unknownKeys":"strip","catchall":{"_def":{"typeName":"ZodNever"}},"typeName":"ZodObject","openapi":{"_internal":{"extendedFrom":{"refId":"ApiResponse","schema":{"_def":{"unknownKeys":"strip","catchall":{"_def":{"typeName":"ZodNever"}},"typeName":"ZodObject","openapi":{"_internal":{"refId":"ApiResponse"}}},"_cached":null}},"refId":"AuthError"}}},"_cached":null}}}},"401":{"description":"Invalid credentials","content":{"application/json":{"schema":{"_def":{"unknownKeys":"strip","catchall":{"_def":{"typeName":"ZodNever"}},"typeName":"ZodObject","openapi":{"_internal":{"extendedFrom":{"refId":"ApiResponse","schema":{"_def":{"unknownKeys":"strip","catchall":{"_def":{"typeName":"ZodNever"}},"typeName":"ZodObject","openapi":{"_internal":{"refId":"ApiResponse"}}},"_cached":null}},"refId":"AuthError"}}},"_cached":null}}}},"409":{"description":"Username or email already exists","content":{"application/json":{"schema":{"_def":{"unknownKeys":"strip","catchall":{"_def":{"typeName":"ZodNever"}},"typeName":"ZodObject","openapi":{"_internal":{"extendedFrom":{"refId":"ApiResponse","schema":{"_def":{"unknownKeys":"strip","catchall":{"_def":{"typeName":"ZodNever"}},"typeName":"ZodObject","openapi":{"_internal":{"refId":"ApiResponse"}}},"_cached":null}},"refId":"AuthError"}}},"_cached":null}}}},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"_def":{"unknownKeys":"strip","catchall":{"_def":{"typeName":"ZodNever"}},"typeName":"ZodObject","openapi":{"_internal":{"extendedFrom":{"refId":"ApiResponse","schema":{"_def":{"unknownKeys":"strip","catchall":{"_def":{"typeName":"ZodNever"}},"typeName":"ZodObject","openapi":{"_internal":{"refId":"ApiResponse"}}},"_cached":null}},"refId":"AuthError"}}},"_cached":null}}}},"tags":["Authentication"],"summary":"Create new user account","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RegisterRequestDTO"}}}},"responses":{"201":{"description":"User created successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RegisterResponse"}}}}}}},"/api/logout":{"post":{"tags":["Authentication"],"summary":"Logout user","description":"Invalidate current session and clear auth token","responses":{"200":{"description":"Operation successful","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LogoutResponse"}}}},"400":{"description":"Invalid malformed input","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthError"}}}},"401":{"description":"Invalid credentials","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthError"}}}},"409":{"description":"Username or email already exists","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthError"}}}},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthError"}}}}}}},"/api/check":{"get":{"400":{"description":"Invalid malformed input","content":{"application/json":{"schema":{"_def":{"unknownKeys":"strip","catchall":{"_def":{"typeName":"ZodNever"}},"typeName":"ZodObject","openapi":{"_internal":{"extendedFrom":{"refId":"ApiResponse","schema":{"_def":{"unknownKeys":"strip","catchall":{"_def":{"typeName":"ZodNever"}},"typeName":"ZodObject","openapi":{"_internal":{"refId":"ApiResponse"}}},"_cached":null}},"refId":"AuthError"}}},"_cached":null}}}},"401":{"description":"Invalid credentials","content":{"application/json":{"schema":{"_def":{"unknownKeys":"strip","catchall":{"_def":{"typeName":"ZodNever"}},"typeName":"ZodObject","openapi":{"_internal":{"extendedFrom":{"refId":"ApiResponse","schema":{"_def":{"unknownKeys":"strip","catchall":{"_def":{"typeName":"ZodNever"}},"typeName":"ZodObject","openapi":{"_internal":{"refId":"ApiResponse"}}},"_cached":null}},"refId":"AuthError"}}},"_cached":null}}}},"409":{"description":"Username or email already exists","content":{"application/json":{"schema":{"_def":{"unknownKeys":"strip","catchall":{"_def":{"typeName":"ZodNever"}},"typeName":"ZodObject","openapi":{"_internal":{"extendedFrom":{"refId":"ApiResponse","schema":{"_def":{"unknownKeys":"strip","catchall":{"_def":{"typeName":"ZodNever"}},"typeName":"ZodObject","openapi":{"_internal":{"refId":"ApiResponse"}}},"_cached":null}},"refId":"AuthError"}}},"_cached":null}}}},"500":{"description":"Internal server error","content":{"application/json":{"schema":{"_def":{"unknownKeys":"strip","catchall":{"_def":{"typeName":"ZodNever"}},"typeName":"ZodObject","openapi":{"_internal":{"extendedFrom":{"refId":"ApiResponse","schema":{"_def":{"unknownKeys":"strip","catchall":{"_def":{"typeName":"ZodNever"}},"typeName":"ZodObject","openapi":{"_internal":{"refId":"ApiResponse"}}},"_cached":null}},"refId":"AuthError"}}},"_cached":null}}}},"tags":["Authentication"],"summary":"Check authentication status","description":"Verify if current session is valid","responses":{"200":{"description":"Operation successful","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthCheckResponse"}}}}}}},"/api/feed":{"get":{"tags":["Feed"],"summary":"Get feed of current user","description":"Retrieve paginated feed posts for the authenticated user","parameters":[{"schema":{"type":"string"},"required":false,"name":"cursor","in":"query"},{"schema":{"type":"string"},"required":false,"name":"limit","in":"query"}],"responses":{"200":{"description":"Feed retrieved successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/FeedResponse"}}}}}},"post":{"tags":["Feed"],"summary":"Create new feed post","description":"Create a new feed post for the authenticated user","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/FeedPostCreateRequestDTO"}}}},"responses":{"201":{"description":"Feed post created successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponse"}}}}}}},"/api/feed/{postId}":{"put":{"tags":["Feed"],"summary":"Update feed post","description":"Update an existing feed post","parameters":[{"schema":{"type":"string","minLength":1,"example":"123"},"required":true,"name":"postId","in":"path"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/FeedPostUpdateRequestDTO"}}}},"responses":{"200":{"description":"Feed post updated successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponse"}}}}}},"delete":{"tags":["Feed"],"summary":"Delete feed post","description":"Delete an existing feed post","parameters":[{"schema":{"type":"string","minLength":1,"example":"123"},"required":true,"name":"postId","in":"path"}],"responses":{"200":{"description":"Feed post deleted successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponse"}}}}}}},"/api/feed/detail/{feedId}":{"get":{"tags":["Feed"],"summary":"Get feed post by ID","description":"Retrieve a specific feed post by its ID","parameters":[{"schema":{"type":"string","minLength":1,"example":"123"},"required":true,"name":"feedId","in":"path"}],"responses":{"200":{"description":"Feed post retrieved successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/FeedDetailResponse"}}}},"404":{"description":"Feed post not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/FeedErrorResponse"}}}}}}},"/api/chat/history":{"get":{"tags":["Chat"],"security":[{"cookieAuth":[]}],"parameters":[{"schema":{"type":"string"},"required":true,"name":"with_id","in":"query"},{"schema":{"type":"number"},"required":false,"name":"cursor","in":"query"},{"schema":{"type":"number","minimum":1,"maximum":50},"required":false,"name":"limit","in":"query"}],"responses":{"200":{"description":"Chat history retrieved successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ChatHistoryResponse"}}}}}}},"/api/chat/users/no-history":{"get":{"tags":["Chat"],"security":[{"cookieAuth":[]}],"responses":{"200":{"description":"Chat users retrieved successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ChatMessageSchemaResponse"}}}}}}},"/api/chat/users":{"get":{"tags":["Chat"],"security":[{"cookieAuth":[]}],"responses":{"200":{"description":"Chat users retrieved successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ChatMessageSchemaResponse"}}}}}}},"/api/profile/me":{"get":{"tags":["Profile"],"summary":"Get current user profile","description":"Retrieve the profile of the currently authenticated user.","responses":{"200":{"description":"Profile retrieved successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProfileResponse"}}}}}}},"/api/profile/users":{"get":{"tags":["Profile"],"summary":"Get list of users","description":"Retrieve a paginated list of user profiles.","parameters":[{"schema":{"type":"string","description":"Search query for user profiles","example":"John"},"required":false,"name":"search","in":"query"},{"schema":{"type":"number","minimum":1,"maximum":50},"required":false,"name":"limit","in":"query"}],"responses":{"200":{"description":"Users retrieved successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UsersResponse"}}}}}}},"/api/profile/{userId}":{"get":{"tags":["Profile"],"summary":"Get user profile by ID","description":"Retrieve the profile details of a specific user by ID.","parameters":[{"schema":{"type":"string","minLength":1,"example":"123"},"required":true,"name":"userId","in":"path"}],"responses":{"200":{"description":"Profile retrieved successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProfileResponse"}}}}}},"put":{"tags":["Profile"],"summary":"Update user profile","description":"Update the profile details of the currently authenticated user.","parameters":[{"schema":{"type":"string","minLength":1,"example":"123"},"required":true,"name":"userId","in":"path"}],"requestBody":{"content":{"multipart/form-data":{"schema":{"$ref":"#/components/schemas/ProfileUpdateDTO"}}}},"responses":{"200":{"description":"Profile updated successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponse"}}}}}}},"/api/connection/recommendations":{"get":{"tags":["Connections"],"summary":"Get connection recommendations","security":[{"cookieAuth":[]}],"responses":{"200":{"description":"Connection recommendations retrieved successfully","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/ApiResponse"},{"type":"object","properties":{"body":{"$ref":"#/components/schemas/ConnectionRecommendationsResponseDAO"}},"required":["body"]}]}}}}}}},"/api/connection/request":{"post":{"tags":["Connections"],"summary":"Create connection request","security":[{"cookieAuth":[]}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConnectionRequestDTO"}}}},"responses":{"200":{"description":"Operation completed successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponse"}}}}}}},"/api/connection/pending-requests":{"get":{"tags":["Connections"],"summary":"Get pending connection requests","security":[{"cookieAuth":[]}],"responses":{"200":{"description":"Operation completed successfully","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/ApiResponse"},{"type":"object","properties":{"body":{"$ref":"#/components/schemas/PendingRequestsResponse"}},"required":["body"]}]}}}}}}},"/api/connection/handle-request":{"post":{"tags":["Connections"],"summary":"Handle connection request","security":[{"cookieAuth":[]}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConnectionActionDTO"}}}},"responses":{"200":{"description":"Operation completed successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponse"}}}}}}},"/api/connection/users/{userId}":{"get":{"tags":["Connections"],"summary":"Get user connections","security":[{"cookieAuth":[]}],"parameters":[{"schema":{"type":"string","minLength":1,"example":"123"},"required":true,"name":"userId","in":"path"}],"responses":{"200":{"description":"Operation completed successfully","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/ApiResponse"},{"type":"object","properties":{"body":{"$ref":"#/components/schemas/ConnectionsResponse"}},"required":["body"]}]}}}}}}},"/api/connection/delete/{connectionId}":{"delete":{"tags":["Connections"],"summary":"Delete connection","security":[{"cookieAuth":[]}],"parameters":[{"schema":{"type":"string","minLength":1,"example":"123"},"required":true,"name":"connectionId","in":"path"}],"responses":{"200":{"description":"Operation completed successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponse"}}}}}}},"/api/notification/vapid-public-key":{"get":{"tags":["Notifications"],"description":"Get VAPID public key for push notifications","responses":{"200":{"description":"VAPID public key retrieved successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SubscriptionResponse"}}}}}}},"/api/notification/unsubscribe":{"post":{"tags":["Notifications"],"security":[{"cookieAuth":[]}],"responses":{"200":{"description":"Successfully unsubscribed from notifications","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponse"}}}}}}},"/api/notification/subscribe":{"post":{"tags":["Notifications"],"security":[{"cookieAuth":[]}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PushSubscription"}}}},"responses":{"200":{"description":"Subscription saved successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponse"}}}}}}},"/api/notification/check-subscription":{"get":{"tags":["Notifications"],"security":[{"cookieAuth":[]}],"responses":{"200":{"description":"Check subscription status","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CheckSubscriptionResponse"}}}}}}},"/api/notification/test":{"post":{"tags":["Notifications"],"security":[{"cookieAuth":[]}],"responses":{"200":{"description":"Test notification sent successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiResponse"}}}}}}},"/health":{"get":{"tags":["Health"],"summary":"Health Check","description":"Check the health status of the API","responses":{"200":{"description":"API is healthy","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string"},"timestamp":{"type":"string"},"uptime":{"type":"number"}},"required":["status","timestamp","uptime"]}}}}}}}}}